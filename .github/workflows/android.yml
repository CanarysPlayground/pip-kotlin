name: PIP.Android.CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    paths-ignore:
      - .github/workflows/**

jobs:
  build:
    name: üõ† Build App
    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v2
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 16
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew assembleDebug --stacktrace
    
    - name: Upload APK
      uses: actions/upload-artifact@v1
      with:
          name: app
          path: app/build/outputs/apk/debug/app-debug.apk
    
  codeql:
    name: CodeQL üîÜ
    runs-on: ubuntu-latest
    needs: build

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  linter:
    name: üîç Lint Code
    runs-on: ubuntu-latest
    needs: build
    steps:
    
    - uses: actions/checkout@v3
    - name: Get branch name (merge)
      if: github.event_name != 'pull_request'
      shell: bash
      run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

    - name: Get branch name (pull request)
      if: github.event_name == 'pull_request'
      shell: bash
      run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

    - name: Print the branch name
      run: echo ${{ env.BRANCH_NAME }}

    - name: Run Super linter
      id: linter
      uses: github/super-linter@v4.9.6
      env:
        VALIDATE_ALL_CODEBASE: false
        VALIDATE_JAVA: true
        VALIDATE_JAVASCRIPT_ES: true
        VALIDATE_JAVASCRIPT_STANDARD: true        
        DEFAULT_BRANCH: ${{ env.BRANCH_NAME }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
  app-center:
    name: ‚¨ÜÔ∏è Upload to App Center
    runs-on: ubuntu-latest
    needs: build
    environment: App Center
    steps:

    - uses: actions/download-artifact@v3
      with:
        name: app
    
    - run: ls -la
    - name: Upload apk to App Center
      uses: wzieba/AppCenter-Github-Action@v1
      with:
        appName: ramesh.kumar-ecanarys.com/pip-kotlin
        token: ${{secrets.APP_CENTER_TOKEN}}
        group: Beta-testers
        file: ${{github.workspace}}/app-debug.apk
        notifyTesters: true
        debug: false
